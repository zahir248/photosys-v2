rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Files collection
    match /files/{fileId} {
      // Allow read if authenticated and owns the file
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow create if authenticated and userId matches
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Allow delete if authenticated and owns the file
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Prevent updates for now
      allow update: if false;
    }
    
    // Users collection
    match /users/{userId} {
      // Users can only read/write their own data
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

